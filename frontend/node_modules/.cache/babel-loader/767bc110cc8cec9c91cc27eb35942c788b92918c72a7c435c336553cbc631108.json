{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\venka\\\\Downloads\\\\DoctorBooking (3)\\\\DoctorBooking\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { Form, Input, message } from \"antd\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { hideLoading, showLoading } from \"../redux/features/alertSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // Submit for Register\n  const submitHandler = async values => {\n    try {\n      dispatch(showLoading());\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/users/register\", values);\n      dispatch(hideLoading());\n      if (data.success) {\n        message.success(\"Registration Successful\");\n        navigate(\"/login\");\n      } else {\n        message.error(data.message);\n      }\n    } catch (error) {\n      dispatch(hideLoading());\n      message.error(\"Registration Failed\");\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        onFinish: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please input your name!\"\n          }, {\n            min: 3,\n            message: \"Your name must be at least 3 characters\"\n          }, {\n            max: 50,\n            message: \"Your name cannot exceed 50 characters\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email\",\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: \"Please input your email!\"\n          }, {\n            type: \"email\",\n            message: \"Invalid email!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: \"Please input your password!\"\n          }, {\n            min: 8,\n            message: \"Your password must be at least 8 characters\"\n          }, {\n            max: 128,\n            message: \"Your password cannot exceed 128 characters\"\n          }, {\n            pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-=\\\\[\\]{};':\"\\\\|,.<>\\\\/?])/,\n            message: \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Already Registered? Click Here to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Form","Input","message","axios","React","useDispatch","Link","useNavigate","hideLoading","showLoading","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","dispatch","submitHandler","values","data","post","success","error","console","log","children","className","layout","onFinish","fileName","_jsxFileName","lineNumber","columnNumber","Item","label","name","rules","required","min","max","type","pattern","Password","to","_c","$RefreshReg$"],"sources":["C:/Users/venka/Downloads/DoctorBooking (3)/DoctorBooking/frontend/src/components/Register.js"],"sourcesContent":["import { Form, Input, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { hideLoading, showLoading } from \"../redux/features/alertSlice\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  // Submit for Register\r\n  const submitHandler = async (values) => {\r\n    try {\r\n      dispatch(showLoading());\r\n      const { data } = await axios.post(\"http://localhost:5000/api/users/register\", values);\r\n      dispatch(hideLoading());\r\n      if (data.success) {\r\n      message.success(\"Registration Successful\");\r\n      navigate(\"/login\");\r\n      } else {\r\n        message.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideLoading());\r\n      message.error(\"Registration Failed\");\r\n      console.log(error)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"register-page\">\r\n        <Form layout=\"vertical\" onFinish={submitHandler}>\r\n          <h1>Register</h1>\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[\r\n              { required: true, message: \"Please input your name!\" },\r\n              { min: 3, message: \"Your name must be at least 3 characters\" },\r\n              { max: 50, message: \"Your name cannot exceed 50 characters\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n              { required: true, message: \"Please input your email!\" },\r\n              { type: \"email\", message: \"Invalid email!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              { required: true, message: \"Please input your password!\" },\r\n              { min: 8, message: \"Your password must be at least 8 characters\" },\r\n              { max: 128, message: \"Your password cannot exceed 128 characters\" },\r\n              {\r\n                pattern:\r\n                  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-=\\\\[\\]{};':\"\\\\|,.<>\\\\/?])/,\r\n                message:\r\n                  \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Link to=\"/login\">Already Registered? Click Here to Login</Link>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Register</button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}