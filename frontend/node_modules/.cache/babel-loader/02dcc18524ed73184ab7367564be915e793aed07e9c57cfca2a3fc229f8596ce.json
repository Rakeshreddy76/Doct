{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\venka\\\\Downloads\\\\DoctorBooking (3)\\\\DoctorBooking\\\\frontend\\\\src\\\\components\\\\EarningsByServiceCategory.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarningsByServiceCategory = ({\n  bookingData\n}) => {\n  // if (!bookingData) {\n  //   return <div>No booking data available</div>;\n  // }\n  const earningsByServiceCategory = {};\n\n  // Extract earnings by service category and doctor\n  bookingData.forEach(booking => {\n    const doctorName = booking.Username_doctor;\n    booking.bookedServicesData.forEach(service => {\n      const serviceCategory = service.serviceCategory;\n\n      // Calculate total earnings by service category\n      earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Earnings by Service Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(earningsByServiceCategory).map(([category, earnings]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [category, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), \" \", earnings, \" INR\"]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = EarningsByServiceCategory;\nexport default EarningsByServiceCategory;\n\n// import React from 'react';\n\n// const EarningsByServiceCategory = ({ bookingData }) => {\n//   // Check if bookingData is undefined or null\n//   if (!bookingData) {\n//     return <div>No booking data available</div>;\n//   }\n\n//   const earningsByServiceCategory = {};\n\n//   // Extract earnings by service category and doctor\n//   bookingData.forEach((booking) => {\n//     // Check if bookedServicesData is available in the current booking\n//     if (booking.bookedServicesData && Array.isArray(booking.bookedServicesData)) {\n//       const doctorName = booking.Username_doctor;\n\n//       booking.bookedServicesData.forEach((service) => {\n//         const serviceCategory = service.serviceCategory;\n\n//         // Calculate total earnings by service category\n//         earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\n//       });\n//     }\n//   });\n\n//   return (\n//     <div>\n//       <h3>Earnings by Service Category</h3>\n//       <ul>\n//         {Object.entries(earningsByServiceCategory).map(([category, earnings]) => (\n//           <li key={category}>\n//             <strong>{category}:</strong> {earnings} INR\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default EarningsByServiceCategory;\nvar _c;\n$RefreshReg$(_c, \"EarningsByServiceCategory\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","EarningsByServiceCategory","bookingData","earningsByServiceCategory","forEach","booking","doctorName","Username_doctor","bookedServicesData","service","serviceCategory","amount","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","category","earnings","_c","$RefreshReg$"],"sources":["C:/Users/venka/Downloads/DoctorBooking (3)/DoctorBooking/frontend/src/components/EarningsByServiceCategory.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst EarningsByServiceCategory = ({ bookingData }) => {\r\n  // if (!bookingData) {\r\n  //   return <div>No booking data available</div>;\r\n  // }\r\n  const earningsByServiceCategory = {};\r\n\r\n  // Extract earnings by service category and doctor\r\n  bookingData.forEach((booking) => {\r\n    const doctorName = booking.Username_doctor;\r\n\r\n    booking.bookedServicesData.forEach((service) => {\r\n      const serviceCategory = service.serviceCategory;\r\n\r\n      // Calculate total earnings by service category\r\n      earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Earnings by Service Category</h2>\r\n      <ul>\r\n        {Object.entries(earningsByServiceCategory).map(([category, earnings]) => (\r\n          <li key={category}>\r\n            <strong>{category}:</strong> {earnings} INR\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EarningsByServiceCategory;\r\n\r\n// import React from 'react';\r\n\r\n// const EarningsByServiceCategory = ({ bookingData }) => {\r\n//   // Check if bookingData is undefined or null\r\n//   if (!bookingData) {\r\n//     return <div>No booking data available</div>;\r\n//   }\r\n\r\n//   const earningsByServiceCategory = {};\r\n\r\n//   // Extract earnings by service category and doctor\r\n//   bookingData.forEach((booking) => {\r\n//     // Check if bookedServicesData is available in the current booking\r\n//     if (booking.bookedServicesData && Array.isArray(booking.bookedServicesData)) {\r\n//       const doctorName = booking.Username_doctor;\r\n\r\n//       booking.bookedServicesData.forEach((service) => {\r\n//         const serviceCategory = service.serviceCategory;\r\n\r\n//         // Calculate total earnings by service category\r\n//         earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\r\n//       });\r\n//     }\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Earnings by Service Category</h3>\r\n//       <ul>\r\n//         {Object.entries(earningsByServiceCategory).map(([category, earnings]) => (\r\n//           <li key={category}>\r\n//             <strong>{category}:</strong> {earnings} INR\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EarningsByServiceCategory;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,yBAAyB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACrD;EACA;EACA;EACA,MAAMC,yBAAyB,GAAG,CAAC,CAAC;;EAEpC;EACAD,WAAW,CAACE,OAAO,CAAEC,OAAO,IAAK;IAC/B,MAAMC,UAAU,GAAGD,OAAO,CAACE,eAAe;IAE1CF,OAAO,CAACG,kBAAkB,CAACJ,OAAO,CAAEK,OAAO,IAAK;MAC9C,MAAMC,eAAe,GAAGD,OAAO,CAACC,eAAe;;MAE/C;MACAP,yBAAyB,CAACO,eAAe,CAAC,GAAG,CAACP,yBAAyB,CAACO,eAAe,CAAC,IAAI,CAAC,IAAID,OAAO,CAACE,MAAM;IACjH,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrChB,OAAA;MAAAY,QAAA,EACGK,MAAM,CAACC,OAAO,CAACf,yBAAyB,CAAC,CAACgB,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,QAAQ,CAAC,kBAClErB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,GAASQ,QAAQ,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACK,QAAQ,EAAC,MACzC;MAAA,GAFSD,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACM,EAAA,GA9BIrB,yBAAyB;AAgC/B,eAAeA,yBAAyB;;AAExC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}