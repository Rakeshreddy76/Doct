{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\venka\\\\Downloads\\\\DoctorBooking (3)\\\\DoctorBooking\\\\frontend\\\\src\\\\components\\\\DoctorStats.js\";\n// import React from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import { Chart as ChartJS } from \"chart.js/auto\";\n\n// const DoctorStats = ({ bookingData }) => {\n//   const doctorCounts = {};\n//   const data = {\n//     labels: [],\n//     datasets: [{\n//       label: 'Number of Doctors',\n//       data: [],\n//       backgroundColor: 'rgba(75,192,192,0.2)',\n//       borderColor: 'rgba(75,192,192,1)',\n//       borderWidth: 1,\n//       yAxisID: 'patients',\n//     }],\n//   };\n\n//   // Extract statistics\n//   bookingData.forEach((booking) => {\n//     const doctorName = booking.Username_doctor;\n\n//     // Count registered doctors\n//     doctorCounts[doctorName] = (doctorCounts[doctorName] || 0) + 1;\n//   });\n\n//   data.labels = Object.keys(doctorCounts);\n//   data.datasets[0].data = Object.values(doctorCounts);\n\n//   return (\n//     <div>\n//       <h2>Doctor Statistics</h2>\n//       <Bar data={data} />\n//     </div>\n//   );\n// };\n\n// export default DoctorStats;\n\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorStats = ({\n  bookingData\n}) => {\n  const doctorCounts = {};\n  const data = {\n    labels: [],\n    datasets: [{\n      label: 'Number of Doctors',\n      data: [],\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n      yAxisID: 'patients'\n    }]\n  };\n\n  // Extract statistics\n  bookingData.forEach(booking => {\n    const doctorName = booking.Username_doctor;\n\n    // Count registered doctors\n    doctorCounts[doctorName] = (doctorCounts[doctorName] || 0) + 1;\n  });\n  data.labels = Object.keys(doctorCounts);\n  data.datasets[0].data = Object.values(doctorCounts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Doctor Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chartContainer,\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles\n_c = DoctorStats;\nconst styles = {\n  container: {\n    margin: '20px',\n    padding: '20px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    background: '#fff'\n  },\n  heading: {\n    color: '#333',\n    fontSize: '24px',\n    marginBottom: '10px'\n  },\n  chartContainer: {\n    width: '100%',\n    height: '400px' // Adjust the height as needed\n  }\n};\nexport default DoctorStats;\nvar _c;\n$RefreshReg$(_c, \"DoctorStats\");","map":{"version":3,"names":["React","Bar","jsxDEV","_jsxDEV","DoctorStats","bookingData","doctorCounts","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","yAxisID","forEach","booking","doctorName","Username_doctor","Object","keys","values","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","chartContainer","_c","margin","padding","border","borderRadius","background","color","fontSize","marginBottom","width","height","$RefreshReg$"],"sources":["C:/Users/venka/Downloads/DoctorBooking (3)/DoctorBooking/frontend/src/components/DoctorStats.js"],"sourcesContent":["// import React from 'react';\r\n// import { Bar } from 'react-chartjs-2';\r\n// import { Chart as ChartJS } from \"chart.js/auto\";\r\n\r\n// const DoctorStats = ({ bookingData }) => {\r\n//   const doctorCounts = {};\r\n//   const data = {\r\n//     labels: [],\r\n//     datasets: [{\r\n//       label: 'Number of Doctors',\r\n//       data: [],\r\n//       backgroundColor: 'rgba(75,192,192,0.2)',\r\n//       borderColor: 'rgba(75,192,192,1)',\r\n//       borderWidth: 1,\r\n//       yAxisID: 'patients',\r\n//     }],\r\n//   };\r\n\r\n//   // Extract statistics\r\n//   bookingData.forEach((booking) => {\r\n//     const doctorName = booking.Username_doctor;\r\n\r\n//     // Count registered doctors\r\n//     doctorCounts[doctorName] = (doctorCounts[doctorName] || 0) + 1;\r\n//   });\r\n\r\n//   data.labels = Object.keys(doctorCounts);\r\n//   data.datasets[0].data = Object.values(doctorCounts);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Doctor Statistics</h2>\r\n//       <Bar data={data} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DoctorStats;\r\n\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst DoctorStats = ({ bookingData }) => {\r\n  const doctorCounts = {};\r\n  const data = {\r\n    labels: [],\r\n    datasets: [{\r\n      label: 'Number of Doctors',\r\n      data: [],\r\n      backgroundColor: 'rgba(75,192,192,0.2)',\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      borderWidth: 1,\r\n      yAxisID: 'patients',\r\n    }],\r\n  };\r\n\r\n  // Extract statistics\r\n  bookingData.forEach((booking) => {\r\n    const doctorName = booking.Username_doctor;\r\n\r\n    // Count registered doctors\r\n    doctorCounts[doctorName] = (doctorCounts[doctorName] || 0) + 1;\r\n  });\r\n\r\n  data.labels = Object.keys(doctorCounts);\r\n  data.datasets[0].data = Object.values(doctorCounts);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Doctor Statistics</h2>\r\n      <div style={styles.chartContainer}>\r\n        <Bar data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = {\r\n  container: {\r\n    margin: '20px',\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    background: '#fff',\r\n  },\r\n  heading: {\r\n    color: '#333',\r\n    fontSize: '24px',\r\n    marginBottom: '10px',\r\n  },\r\n  chartContainer: {\r\n    width: '100%',\r\n    height: '400px', // Adjust the height as needed\r\n  },\r\n};\r\n\r\nexport default DoctorStats;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACvC,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,mBAAmB;MAC1BH,IAAI,EAAE,EAAE;MACRI,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE,oBAAoB;MACjCC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;;EAED;EACAT,WAAW,CAACU,OAAO,CAAEC,OAAO,IAAK;IAC/B,MAAMC,UAAU,GAAGD,OAAO,CAACE,eAAe;;IAE1C;IACAZ,YAAY,CAACW,UAAU,CAAC,GAAG,CAACX,YAAY,CAACW,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;EAChE,CAAC,CAAC;EAEFV,IAAI,CAACC,MAAM,GAAGW,MAAM,CAACC,IAAI,CAACd,YAAY,CAAC;EACvCC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACF,IAAI,GAAGY,MAAM,CAACE,MAAM,CAACf,YAAY,CAAC;EAEnD,oBACEH,OAAA;IAAKmB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC3BtB,OAAA;MAAImB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD3B,OAAA;MAAKmB,KAAK,EAAEC,MAAM,CAACQ,cAAe;MAAAN,QAAA,eAChCtB,OAAA,CAACF,GAAG;QAACM,IAAI,EAAEA;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAE,EAAA,GAnCM5B,WAAW;AAoCjB,MAAMmB,MAAM,GAAG;EACbC,SAAS,EAAE;IACTS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE;EACd,CAAC;EACDX,OAAO,EAAE;IACPY,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,MAAM;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDT,cAAc,EAAE;IACdU,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,OAAO,CAAE;EACnB;AACF,CAAC;AAED,eAAetC,WAAW;AAAC,IAAA4B,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}