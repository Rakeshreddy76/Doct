{"ast":null,"code":"// import React from 'react';\n\n// const EarningsByServiceCategory = ({ bookingData }) => {\n//   // if (!bookingData) {\n//   //   return <div>No booking data available</div>;\n//   // }\n//   const earningsByServiceCategory = {};\n\n//   // Extract earnings by service category and doctor\n//   bookingData.forEach((booking) => {\n//     const doctorName = booking.Username_doctor;\n\n//     booking.bookedServicesData.forEach((service) => {\n//       const serviceCategory = service.serviceCategory;\n\n//       // Calculate total earnings by service category\n//       earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\n//     });\n//   });\n\n//   return (\n//     <div>\n//       <h2>Earnings by Service Category</h2>\n//       <ul>\n//         {Object.entries(earningsByServiceCategory).map(([category, earnings]) => (\n//           <li key={category}>\n//             <strong>{category}:</strong> {earnings} INR\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default EarningsByServiceCategory;\n\n// // import React from 'react';\n\n// // const EarningsByServiceCategory = ({ bookingData }) => {\n// //   // Check if bookingData is undefined or null\n// //   if (!bookingData) {\n// //     return <div>No booking data available</div>;\n// //   }\n\n// //   const earningsByServiceCategory = {};\n\n// //   // Extract earnings by service category and doctor\n// //   bookingData.forEach((booking) => {\n// //     // Check if bookedServicesData is available in the current booking\n// //     if (booking.bookedServicesData && Array.isArray(booking.bookedServicesData)) {\n// //       const doctorName = booking.Username_doctor;\n\n// //       booking.bookedServicesData.forEach((service) => {\n// //         const serviceCategory = service.serviceCategory;\n\n// //         // Calculate total earnings by service category\n// //         earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\n// //       });\n// //     }\n// //   });\n\n// //   return (\n// //     <div>\n// //       <h3>Earnings by Service Category</h3>\n// //       <ul>\n// //         {Object.entries(earningsByServiceCategory).map(([category, earnings]) => (\n// //           <li key={category}>\n// //             <strong>{category}:</strong> {earnings} INR\n// //           </li>\n// //         ))}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// // export default EarningsByServiceCategory;","map":{"version":3,"names":[],"sources":["C:/Users/venka/Downloads/DoctorBooking (3)/DoctorBooking/frontend/src/components/EarningsByServiceCategory.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// const EarningsByServiceCategory = ({ bookingData }) => {\r\n//   // if (!bookingData) {\r\n//   //   return <div>No booking data available</div>;\r\n//   // }\r\n//   const earningsByServiceCategory = {};\r\n\r\n//   // Extract earnings by service category and doctor\r\n//   bookingData.forEach((booking) => {\r\n//     const doctorName = booking.Username_doctor;\r\n\r\n//     booking.bookedServicesData.forEach((service) => {\r\n//       const serviceCategory = service.serviceCategory;\r\n\r\n//       // Calculate total earnings by service category\r\n//       earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\r\n//     });\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Earnings by Service Category</h2>\r\n//       <ul>\r\n//         {Object.entries(earningsByServiceCategory).map(([category, earnings]) => (\r\n//           <li key={category}>\r\n//             <strong>{category}:</strong> {earnings} INR\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EarningsByServiceCategory;\r\n\r\n// // import React from 'react';\r\n\r\n// // const EarningsByServiceCategory = ({ bookingData }) => {\r\n// //   // Check if bookingData is undefined or null\r\n// //   if (!bookingData) {\r\n// //     return <div>No booking data available</div>;\r\n// //   }\r\n\r\n// //   const earningsByServiceCategory = {};\r\n\r\n// //   // Extract earnings by service category and doctor\r\n// //   bookingData.forEach((booking) => {\r\n// //     // Check if bookedServicesData is available in the current booking\r\n// //     if (booking.bookedServicesData && Array.isArray(booking.bookedServicesData)) {\r\n// //       const doctorName = booking.Username_doctor;\r\n\r\n// //       booking.bookedServicesData.forEach((service) => {\r\n// //         const serviceCategory = service.serviceCategory;\r\n\r\n// //         // Calculate total earnings by service category\r\n// //         earningsByServiceCategory[serviceCategory] = (earningsByServiceCategory[serviceCategory] || 0) + service.amount;\r\n// //       });\r\n// //     }\r\n// //   });\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h3>Earnings by Service Category</h3>\r\n// //       <ul>\r\n// //         {Object.entries(earningsByServiceCategory).map(([category, earnings]) => (\r\n// //           <li key={category}>\r\n// //             <strong>{category}:</strong> {earnings} INR\r\n// //           </li>\r\n// //         ))}\r\n// //       </ul>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EarningsByServiceCategory;\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}